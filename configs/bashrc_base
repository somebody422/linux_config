# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac


# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# Set the correct TERM value when running gnome-terminal
# (this seems to break the pager)
if [[ $TERM == xterm && ( $COLORTERM == gnome* || $COLORTERM == xfce4-terminal ) ]]; then
  export TERM=xterm-256color
fi

# Set the correct TERM value when running st.  st supports true color, but with
# vim termguicolors option doesn't work with st unless TERM is changed.
if [[ $TERM == st-256color ]]; then
    export TERM=xterm-256color
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    _PS1='\[\033[4m\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]'
else
    _PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w'
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    _PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\007\]$_PS1"
    ;;
*)
    ;;
esac

# Add current VIRTUAL_ENV to the prompt.  man virtualenv
export VIRTUAL_ENV_DISABLE_PROMPT=1
_PS1='${VIRTUAL_ENV:+(${VIRTUAL_ENV##*/}) }'$_PS1

# Add git info to the command line, if applicable
GIT_SH_PROMPT=~/.git-sh-prompt
[ ! -f $GIT_SH_PROMPT ] && GIT_SH_PROMPT=/usr/lib/git-core/git-sh-prompt
[ ! -f $GIT_SH_PROMPT ] && GIT_SH_PROMPT=/usr/share/git/git-prompt.sh
if [ -f $GIT_SH_PROMPT ]; then
  . $GIT_SH_PROMPT
  export GIT_PS1_SHOWDIRTYSTATE=1
  export GIT_PS1_SHOWUNTRACKEDFILES=1
  export GIT_PS1_SHOWCOLORHINTS=1
  PROMPT_COMMAND='printf "\n\a" && __git_ps1 "$_PS1" "\\n$ "'
fi

# Initialize PS1 for shells that don't use PROMPT_COMMAND
if [ -f $GIT_SH_PROMPT ]; then
    PS1="$_PS1$(__git_ps1)\$ "
else
    PS1="$_PS1\$ "
fi

# Limit the length of prompt consumed by \w or \W substitution
PROMPT_DIRTRIM=3

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# ---- Customizations WRT default Ubuntu 16.04 .bashrc ----

# Use vim as default editor
if [ -x /usr/bin/nvim ]; then
    export EDITOR=/usr/bin/nvim
elif [ -x /usr/bin/vim ]; then
    export EDITOR=/usr/bin/vim
elif [ -x /usr/bin/vi ]; then
    export EDITOR=/usr/bin/vi
fi

# Autojump
if [[ -s $HOME/.autojump/etc/profile.d/autojump.sh ]]; then
    . $HOME/.autojump/etc/profile.d/autojump.sh
elif [ -f /usr/share/autojump/autojump.bash ]; then
    . /usr/share/autojump/autojump.bash
fi

# Colorize diff and preserve colors in less input.  apt-get install colordiff
# Rather than setting LESS=-R, use an alias.  Setting LESS forces git diff to
# always page even if there is nothing to show otherwise.
[ -x /usr/bin/colordiff ] && alias diff='colordiff'
alias less='less -R'

# Most terminals support color schemes.  Tested with xterm and st.
[ -n "$PS1" ] && [ -s $HOME/.config/base16-shell/colorscheme.sh ] \
    && . $HOME/.config/base16-shell/colorscheme.sh

# Tab completion for git-icdiff
if which git-icdiff >/dev/null 2>&1; then
_git_icdiff()
{
    __gitcomp_nl "$(__git_refs)"
}
fi

# Alias to use as a prefix for git commands when working with dotfiles.
# Also useful is `dfc bash`, or `dfc vim` to use vim-fugitive.
alias dfc='GIT_DIR=$HOME/.dotfiles.git'

# Add user's bin dir to end of PATH, removing all pre-existing occurrences that
# may have been added by earlier scripts (.xession, /etc/profile, etc.).
PATH=${PATH//$HOME\/.local\/bin:}
export PATH=${PATH//:$HOME\/.local\/bin}:$HOME/.local/bin

# Support for man pages for user specific programs
export MANPATH=/usr/local/share/man:/usr/share/man:~/.local/share/man

alias py2env='source /home/shedin/code/py2_venv/bin/activate'

[ -f ~/.fzf.bash ] && source ~/.fzf.bash
. ~/linux_config/z-master/z.sh
. ~/linux_config/fz-master/fz.sh

# Shell only exists after the n-th consecutive Ctrl-d
IGNOREEOF=4

alias nv='nvim'

alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

alias one='echo 1'
alias zero='echo 0'

alias gpush='git push'
alias gcheckout='git checkout'
alias gfetch='git fetch'
alias gpull='git pull'
alias gadd='git add'
alias glog='git log'
alias gcommit='git commit'
alias glog='git log'
alias gslog='git slog'
alias gsloga='git sloga'
alias gstatus='git status'
alias gdiff='git diff'
alias gbranch='git branch'
alias greset='git reset'
alias gshow='git show'
alias gstash='git stash'
alias grebase='git rebase'
alias gmerge='git merge'
alias gcherry-pick='git cherry-pick'
alias gclone='git clone'
alias gremote='git remote'
alias gtag='git tag'
#alias g='git '

alias please='sudo $(fc -ln -1)'

# Shortcut to source bin/activate of a python virtualenv
# "Venv ACtivate"
vac() {
  source ${1}/bin/activate
}

# set and export FIIN_PREFIX
setfp() {
  export FIIN_PREFIX=$(readlink -f $1);
}

# binding for moving around the command line
bind '"\C-j": backward-word'
bind '"\C-k": kill-word'
bind '"\C-l": forward-word'

